# Screen like prefix
set -g prefix ^t
bind-key ^t last-window

# source config file
bind F12 source-file ~/.tmux.conf
# Enable vi mode
setw -g mode-keys vi
set-option -g status-keys vi

# Enable mouse
# setw -g mode-mouse on
# setw -g mouse-select-pane on

# Start at 1
set -g base-index 1

# Faster response
set -s escape-time 0

# Status bar setup
set -g status-bg black
set -g status-fg white

# Notifying if other windows has activities
#setw -g monitor-activity on
#set -g visual-activity on

#don't hold the size of the smallest client bounds.
setw -g aggressive-resize on

# Clock #TODO: delete this?
setw -g clock-mode-colour red
setw -g clock-mode-style 24

# Setup term title
# set -g set-titles on
# set -g set-titles-string '#W' #T

# Setup window title
set-window-option -g automatic-rename on

#don't erase terminal contents on editor exit
set-window-option -g alternate-screen on

# Setup default dir
#set-option default-path "$PWD"

#enable 256 colors
set -g default-terminal "screen-256color"

#highlight the current window
#set-window-option -g window-status-current-bg red

# Use ZSH
set -g default-shell /bin/zsh
set -g default-command /bin/zsh

##############Custom bindings
# bind y set status
unbind %
unbind '"'
#bind | split-window -h
#bind _ split-window -v

#Status colors
# set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-left '#[fg=green][#S]'
set -g status-right '#[fg=green,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a %e-%b #[default]#[fg=blue]%H:%M:%S'

# set -g status-left '#[fg=green][#S]'
# set -g status-right '#[fg=yellow]#(conky -i 1)[#W] - %H:%M'
# set -g status-right '#[fg=yellow]#(~/.net_speed.sh eth0) #(OUTPUT=`~/cpu_usage.sh $CPU_PREV_TOTAL $CPU_PREV_IDLE`; CPU_PREV_TOTAL=`echo $OUTPUT | cut -d'|' -f1`; CPU_PREV_IDLE=`echo $OUTPUT | cut -d'|' -f2`; FINAL=`echo $OUTPUT | cut -d'|' -f3`; echo $FINAL%;)#(conky -c ~/.conky.tmux)'
# set -g status-right '#[fg=yellow]#(~/.net_speed.sh eth0) #(conky -c ~/.conky.tmux)'
# set -g status-right '#[fg=yellow]#(~/.net_speed.sh eth0) #(echo "cc"; OUTPUT=`~/test.sh 44 22`; echo "aa"; echo "bb"; )#(conky -c ~/.conky.tmux)'
set-option -g status-utf8 on
set-option -g status on
# set-option -g status-justify centre
set-option -g status-interval 1
set-option -g status-left-length 60
set-option -g status-right-length 140

set-window-option -g window-status-current-fg red

#vim bindings for mooving between the panes
unbind-key l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#use 'v' and 's' to do vertical/horizontal splits, like vim
bind s split-window -v
bind v split-window -h

#use vim resize keys
bind < resize-pane -L 8
bind > resize-pane -R 8
bind - resize-pane -D 8
bind + resize-pane -U 8

#bind l choose-session
bind e command-prompt "switch-client -t %%"
bind r command-prompt "rename-session %%"

#TEST
#set -g mode-bg red
#set -g mode-fg red

#open new window and split in current dir
bind-key c run-shell 'tmux neww "cd \"$(tmux display -p "\$TMUXPWD_#I")\"; exec zsh"'
bind-key s run-shell 'tmux splitw -v "cd \"$(tmux display -p "\$TMUXPWD_#I")\"; exec zsh"'
bind-key v run-shell 'tmux splitw -h "cd \"$(tmux display -p "\$TMUXPWD_#I")\"; exec zsh"'


# set-option -g status-justify "centre"
# set-option -g status-left-length 60
# set-option -g status-right-length 90
# set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
#
# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
#
# bind C-[ run '~/.tmux/tmux-powerline/mute_powerline.sh left'      # Mute left statusbar.
# bind C-] run '~/.tmux/tmux-powerline/mute_powerline.sh right'     # Mute right statusbar.
#
# PS1="$PS1"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD")'
#

#### COLOR

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright


### COLOR (Solarized dark)

## default statusbar colors
#set-option -g status-bg black #base02
#set-option -g status-fg yellow #yellow
#set-option -g status-attr default
#
## default window title colors
#set-window-option -g window-status-fg brightblue #base0
#set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim
#
## active window title colors
#set-window-option -g window-status-current-fg brightred #orange
#set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright
#
## pane border
#set-option -g pane-border-fg black #base02
#set-option -g pane-active-border-fg brightgreen #base01
#
## message text
#set-option -g message-bg black #base02
#set-option -g message-fg brightred #orange
#
## pane number display
#set-option -g display-panes-active-colour blue #blue
#set-option -g display-panes-colour brightred #orange
#
## clock
#set-window-option -g clock-mode-colour green #green

# pane movement
bind-key g command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key o command-prompt -p "send pane to:"  "join-pane -t '%%'"


######## copy/paste related stuff
######## todo: latter...
## vim
#setw -g mode-keys vi
#bind [ copy-mode
#bind -t vi-copy v begin-selection
#bind -t vi-copy y copy-selection
#bind -t vi-copy V rectangle-toggle
#bind ] paste-buffer
#
## buffer
#bind Space choose-buffer
